[project]
name = "ecomet"
version = "0.1.0"
description = "Production-ready Python microservices with Clean Architecture"
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "pydantic>=2.10.0",
    "pydantic-settings>=2.6.0",
    "loguru>=0.7.0",
    "asyncpg>=0.30.0",
    "aiochclient>=2.6.0",
    "aiohttp>=3.11.0",
]

[tool.uv.workspace]
members = ["tasks/task_*"]

[dependency-groups]
dev = [
    "ruff>=0.14.1",
    "wemake-python-styleguide>=0.19.2",
    "flake8-docstrings>=1.7.0",
    "flake8-annotations>=3.1.1",
    "pytest>=8.3.0",
    "pytest-cov>=6.0.0",
    "pytest-anyio>=0.0.0",
    "pytest-asyncio>=0.24.0",
    "pyright>=1.1.390",
    "pre-commit>=4.0.0",
    "bandit[toml]>=1.7.10",
    "httpx>=0.27.0",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["shared", "tasks"]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests", "shared/tests", "tasks/*/tests"]
asyncio_mode = "auto"
addopts = [
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "--strict-markers",
    "-v",
]

[tool.coverage.run]
source = ["."]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/.venv/*",
    "*/venv/*",
    "*/.pytest_cache/*",
    "*/main.py",
    "shared/domain/protocols/database.py",
    "shared/domain/protocols/repository.py",
]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
fail_under = 90
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
    "@abc.abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", ".venv", "venv"]
skips = ["B101", "B104", "B608"]

[tool.pyright]
pythonVersion = "3.13"
typeCheckingMode = "standard"
reportMissingImports = true
reportMissingTypeStubs = false
exclude = [
    "**/__pycache__",
    "**/node_modules",
    ".venv",
    "venv",
]
